// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payDemo.proto

/*
Package pay is a generated protocol buffer package.

It is generated from these files:
	payDemo.proto

It has these top-level messages:
	TransferMoneyResponse
	TransferMoneyRequest
	CheckCardPasswordRequest
	CheckCardPasswordResponse
	GetCardsRequest
	GetCardsResponse
	GetCardRequest
	GetCardResponse
	Card
	BankType
	RemoveCardRequest
	RemoveCardResponse
	AddCardRequest
	AddCardResponse
	TransactionRequest
	TransactionResponse
	RegisterCustomerRequest
	RegisterCustomerResponse
	VerifySmsRequest
	VerifySmsResponse
	CheckLoginRequest
	CheckLoginResponse
	CheckMobileRequest
	CheckMobileResponse
*/
package pay

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CardType int32

const (
	CardType_PayCard  CardType = 0
	CardType_BankCard CardType = 1
)

var CardType_name = map[int32]string{
	0: "PayCard",
	1: "BankCard",
}
var CardType_value = map[string]int32{
	"PayCard":  0,
	"BankCard": 1,
}

func (x CardType) String() string {
	return proto.EnumName(CardType_name, int32(x))
}
func (CardType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TransferMoneyResponse_TransferMoneyResponseCode int32

const (
	TransferMoneyResponse_UNKNOWN              TransferMoneyResponse_TransferMoneyResponseCode = 0
	TransferMoneyResponse_SUCCESS              TransferMoneyResponse_TransferMoneyResponseCode = 1
	TransferMoneyResponse_MOBILE_BLOCKED       TransferMoneyResponse_TransferMoneyResponseCode = 2
	TransferMoneyResponse_DISABLED             TransferMoneyResponse_TransferMoneyResponseCode = 3
	TransferMoneyResponse_INVALID_SRC_CARD     TransferMoneyResponse_TransferMoneyResponseCode = 4
	TransferMoneyResponse_INVALID_DST_CARD     TransferMoneyResponse_TransferMoneyResponseCode = 5
	TransferMoneyResponse_WRONG_TOKEN          TransferMoneyResponse_TransferMoneyResponseCode = 6
	TransferMoneyResponse_WRONG_USER           TransferMoneyResponse_TransferMoneyResponseCode = 7
	TransferMoneyResponse_FAILED               TransferMoneyResponse_TransferMoneyResponseCode = 8
	TransferMoneyResponse_WRONG_PASSWORD       TransferMoneyResponse_TransferMoneyResponseCode = 9
	TransferMoneyResponse_INSUFFICIENT_BALANCE TransferMoneyResponse_TransferMoneyResponseCode = 10
	TransferMoneyResponse_WRONG_AMOUNT         TransferMoneyResponse_TransferMoneyResponseCode = 11
)

var TransferMoneyResponse_TransferMoneyResponseCode_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SUCCESS",
	2:  "MOBILE_BLOCKED",
	3:  "DISABLED",
	4:  "INVALID_SRC_CARD",
	5:  "INVALID_DST_CARD",
	6:  "WRONG_TOKEN",
	7:  "WRONG_USER",
	8:  "FAILED",
	9:  "WRONG_PASSWORD",
	10: "INSUFFICIENT_BALANCE",
	11: "WRONG_AMOUNT",
}
var TransferMoneyResponse_TransferMoneyResponseCode_value = map[string]int32{
	"UNKNOWN":              0,
	"SUCCESS":              1,
	"MOBILE_BLOCKED":       2,
	"DISABLED":             3,
	"INVALID_SRC_CARD":     4,
	"INVALID_DST_CARD":     5,
	"WRONG_TOKEN":          6,
	"WRONG_USER":           7,
	"FAILED":               8,
	"WRONG_PASSWORD":       9,
	"INSUFFICIENT_BALANCE": 10,
	"WRONG_AMOUNT":         11,
}

func (x TransferMoneyResponse_TransferMoneyResponseCode) String() string {
	return proto.EnumName(TransferMoneyResponse_TransferMoneyResponseCode_name, int32(x))
}
func (TransferMoneyResponse_TransferMoneyResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type CheckCardPasswordResponse_CheckCardPasswordResponseCode int32

const (
	CheckCardPasswordResponse_UNKNOWN        CheckCardPasswordResponse_CheckCardPasswordResponseCode = 0
	CheckCardPasswordResponse_SUCCESS        CheckCardPasswordResponse_CheckCardPasswordResponseCode = 1
	CheckCardPasswordResponse_MOBILE_BLOCKED CheckCardPasswordResponse_CheckCardPasswordResponseCode = 2
	CheckCardPasswordResponse_DISABLED       CheckCardPasswordResponse_CheckCardPasswordResponseCode = 3
	CheckCardPasswordResponse_INVALID_CARD   CheckCardPasswordResponse_CheckCardPasswordResponseCode = 4
	CheckCardPasswordResponse_WRONG_TOKEN    CheckCardPasswordResponse_CheckCardPasswordResponseCode = 5
	CheckCardPasswordResponse_WRONG_USER     CheckCardPasswordResponse_CheckCardPasswordResponseCode = 6
	CheckCardPasswordResponse_FAILED         CheckCardPasswordResponse_CheckCardPasswordResponseCode = 7
	CheckCardPasswordResponse_WRONG_PASSWORD CheckCardPasswordResponse_CheckCardPasswordResponseCode = 8
)

var CheckCardPasswordResponse_CheckCardPasswordResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "DISABLED",
	4: "INVALID_CARD",
	5: "WRONG_TOKEN",
	6: "WRONG_USER",
	7: "FAILED",
	8: "WRONG_PASSWORD",
}
var CheckCardPasswordResponse_CheckCardPasswordResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"DISABLED":       3,
	"INVALID_CARD":   4,
	"WRONG_TOKEN":    5,
	"WRONG_USER":     6,
	"FAILED":         7,
	"WRONG_PASSWORD": 8,
}

func (x CheckCardPasswordResponse_CheckCardPasswordResponseCode) String() string {
	return proto.EnumName(CheckCardPasswordResponse_CheckCardPasswordResponseCode_name, int32(x))
}
func (CheckCardPasswordResponse_CheckCardPasswordResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

type GetCardsResponse_GetCardsResponseCode int32

const (
	GetCardsResponse_UNKNOWN        GetCardsResponse_GetCardsResponseCode = 0
	GetCardsResponse_SUCCESS        GetCardsResponse_GetCardsResponseCode = 1
	GetCardsResponse_MOBILE_BLOCKED GetCardsResponse_GetCardsResponseCode = 2
	GetCardsResponse_DISABLED       GetCardsResponse_GetCardsResponseCode = 3
	GetCardsResponse_WRONG_TOKEN    GetCardsResponse_GetCardsResponseCode = 4
	GetCardsResponse_WRONG_USER     GetCardsResponse_GetCardsResponseCode = 5
	GetCardsResponse_FAILED         GetCardsResponse_GetCardsResponseCode = 6
)

var GetCardsResponse_GetCardsResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "DISABLED",
	4: "WRONG_TOKEN",
	5: "WRONG_USER",
	6: "FAILED",
}
var GetCardsResponse_GetCardsResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"DISABLED":       3,
	"WRONG_TOKEN":    4,
	"WRONG_USER":     5,
	"FAILED":         6,
}

func (x GetCardsResponse_GetCardsResponseCode) String() string {
	return proto.EnumName(GetCardsResponse_GetCardsResponseCode_name, int32(x))
}
func (GetCardsResponse_GetCardsResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5, 0}
}

type GetCardResponse_GetCardResponseCode int32

const (
	GetCardResponse_UNKNOWN        GetCardResponse_GetCardResponseCode = 0
	GetCardResponse_SUCCESS        GetCardResponse_GetCardResponseCode = 1
	GetCardResponse_MOBILE_BLOCKED GetCardResponse_GetCardResponseCode = 2
	GetCardResponse_DISABLED       GetCardResponse_GetCardResponseCode = 3
	GetCardResponse_INVALID_CARD   GetCardResponse_GetCardResponseCode = 4
	GetCardResponse_WRONG_TOKEN    GetCardResponse_GetCardResponseCode = 5
	GetCardResponse_WRONG_USER     GetCardResponse_GetCardResponseCode = 6
	GetCardResponse_FAILED         GetCardResponse_GetCardResponseCode = 7
	GetCardResponse_WRONG_PASSWORD GetCardResponse_GetCardResponseCode = 8
)

var GetCardResponse_GetCardResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "DISABLED",
	4: "INVALID_CARD",
	5: "WRONG_TOKEN",
	6: "WRONG_USER",
	7: "FAILED",
	8: "WRONG_PASSWORD",
}
var GetCardResponse_GetCardResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"DISABLED":       3,
	"INVALID_CARD":   4,
	"WRONG_TOKEN":    5,
	"WRONG_USER":     6,
	"FAILED":         7,
	"WRONG_PASSWORD": 8,
}

func (x GetCardResponse_GetCardResponseCode) String() string {
	return proto.EnumName(GetCardResponse_GetCardResponseCode_name, int32(x))
}
func (GetCardResponse_GetCardResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

type RemoveCardResponse_RemoveCardResponseCode int32

const (
	RemoveCardResponse_UNKNOWN        RemoveCardResponse_RemoveCardResponseCode = 0
	RemoveCardResponse_SUCCESS        RemoveCardResponse_RemoveCardResponseCode = 1
	RemoveCardResponse_MOBILE_BLOCKED RemoveCardResponse_RemoveCardResponseCode = 2
	RemoveCardResponse_DISABLED       RemoveCardResponse_RemoveCardResponseCode = 3
	RemoveCardResponse_INVALID_CARD   RemoveCardResponse_RemoveCardResponseCode = 4
	RemoveCardResponse_WRONG_TOKEN    RemoveCardResponse_RemoveCardResponseCode = 5
	RemoveCardResponse_WRONG_USER     RemoveCardResponse_RemoveCardResponseCode = 6
	RemoveCardResponse_FAILED         RemoveCardResponse_RemoveCardResponseCode = 7
)

var RemoveCardResponse_RemoveCardResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "DISABLED",
	4: "INVALID_CARD",
	5: "WRONG_TOKEN",
	6: "WRONG_USER",
	7: "FAILED",
}
var RemoveCardResponse_RemoveCardResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"DISABLED":       3,
	"INVALID_CARD":   4,
	"WRONG_TOKEN":    5,
	"WRONG_USER":     6,
	"FAILED":         7,
}

func (x RemoveCardResponse_RemoveCardResponseCode) String() string {
	return proto.EnumName(RemoveCardResponse_RemoveCardResponseCode_name, int32(x))
}
func (RemoveCardResponse_RemoveCardResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11, 0}
}

type AddCardResponse_AddCardResponseCode int32

const (
	AddCardResponse_UNKNOWN        AddCardResponse_AddCardResponseCode = 0
	AddCardResponse_SUCCESS        AddCardResponse_AddCardResponseCode = 1
	AddCardResponse_MOBILE_BLOCKED AddCardResponse_AddCardResponseCode = 2
	AddCardResponse_DISABLED       AddCardResponse_AddCardResponseCode = 3
	AddCardResponse_INVALID_CARD   AddCardResponse_AddCardResponseCode = 4
	AddCardResponse_CARD_EXISTS    AddCardResponse_AddCardResponseCode = 5
	AddCardResponse_WRONG_TOKEN    AddCardResponse_AddCardResponseCode = 6
	AddCardResponse_WRONG_USER     AddCardResponse_AddCardResponseCode = 7
	AddCardResponse_FAILED         AddCardResponse_AddCardResponseCode = 8
)

var AddCardResponse_AddCardResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "DISABLED",
	4: "INVALID_CARD",
	5: "CARD_EXISTS",
	6: "WRONG_TOKEN",
	7: "WRONG_USER",
	8: "FAILED",
}
var AddCardResponse_AddCardResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"DISABLED":       3,
	"INVALID_CARD":   4,
	"CARD_EXISTS":    5,
	"WRONG_TOKEN":    6,
	"WRONG_USER":     7,
	"FAILED":         8,
}

func (x AddCardResponse_AddCardResponseCode) String() string {
	return proto.EnumName(AddCardResponse_AddCardResponseCode_name, int32(x))
}
func (AddCardResponse_AddCardResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13, 0}
}

type TransactionResponse_TransactionResponseCode int32

const (
	TransactionResponse_UNKNOWN              TransactionResponse_TransactionResponseCode = 0
	TransactionResponse_SUCCESS              TransactionResponse_TransactionResponseCode = 1
	TransactionResponse_MOBILE_BLOCKED       TransactionResponse_TransactionResponseCode = 2
	TransactionResponse_DISABLED             TransactionResponse_TransactionResponseCode = 4
	TransactionResponse_WRONG_CARD_PASSWORD  TransactionResponse_TransactionResponseCode = 5
	TransactionResponse_INSUFFICIENT_BALANCE TransactionResponse_TransactionResponseCode = 6
	TransactionResponse_INVALID_CARD         TransactionResponse_TransactionResponseCode = 7
	TransactionResponse_WRONG_PASSWORD       TransactionResponse_TransactionResponseCode = 8
	TransactionResponse_WRONG_TOKEN          TransactionResponse_TransactionResponseCode = 9
	TransactionResponse_WRONG_USER           TransactionResponse_TransactionResponseCode = 10
	TransactionResponse_FAILED               TransactionResponse_TransactionResponseCode = 11
)

var TransactionResponse_TransactionResponseCode_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "SUCCESS",
	2:  "MOBILE_BLOCKED",
	4:  "DISABLED",
	5:  "WRONG_CARD_PASSWORD",
	6:  "INSUFFICIENT_BALANCE",
	7:  "INVALID_CARD",
	8:  "WRONG_PASSWORD",
	9:  "WRONG_TOKEN",
	10: "WRONG_USER",
	11: "FAILED",
}
var TransactionResponse_TransactionResponseCode_value = map[string]int32{
	"UNKNOWN":              0,
	"SUCCESS":              1,
	"MOBILE_BLOCKED":       2,
	"DISABLED":             4,
	"WRONG_CARD_PASSWORD":  5,
	"INSUFFICIENT_BALANCE": 6,
	"INVALID_CARD":         7,
	"WRONG_PASSWORD":       8,
	"WRONG_TOKEN":          9,
	"WRONG_USER":           10,
	"FAILED":               11,
}

func (x TransactionResponse_TransactionResponseCode) String() string {
	return proto.EnumName(TransactionResponse_TransactionResponseCode_name, int32(x))
}
func (TransactionResponse_TransactionResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15, 0}
}

type RegisterCustomerResponse_RegisterCustomerResponseCode int32

const (
	RegisterCustomerResponse_UNKNOWN            RegisterCustomerResponse_RegisterCustomerResponseCode = 0
	RegisterCustomerResponse_SUCCESS            RegisterCustomerResponse_RegisterCustomerResponseCode = 1
	RegisterCustomerResponse_WRONG_TOKEN        RegisterCustomerResponse_RegisterCustomerResponseCode = 2
	RegisterCustomerResponse_MOBILE_BLOCKED     RegisterCustomerResponse_RegisterCustomerResponseCode = 3
	RegisterCustomerResponse_SHORT_PASSWORD     RegisterCustomerResponse_RegisterCustomerResponseCode = 4
	RegisterCustomerResponse_DISABLED           RegisterCustomerResponse_RegisterCustomerResponseCode = 7
	RegisterCustomerResponse_ALREADY_REGISTERED RegisterCustomerResponse_RegisterCustomerResponseCode = 8
	RegisterCustomerResponse_FAILED             RegisterCustomerResponse_RegisterCustomerResponseCode = 9
)

var RegisterCustomerResponse_RegisterCustomerResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "WRONG_TOKEN",
	3: "MOBILE_BLOCKED",
	4: "SHORT_PASSWORD",
	7: "DISABLED",
	8: "ALREADY_REGISTERED",
	9: "FAILED",
}
var RegisterCustomerResponse_RegisterCustomerResponseCode_value = map[string]int32{
	"UNKNOWN":            0,
	"SUCCESS":            1,
	"WRONG_TOKEN":        2,
	"MOBILE_BLOCKED":     3,
	"SHORT_PASSWORD":     4,
	"DISABLED":           7,
	"ALREADY_REGISTERED": 8,
	"FAILED":             9,
}

func (x RegisterCustomerResponse_RegisterCustomerResponseCode) String() string {
	return proto.EnumName(RegisterCustomerResponse_RegisterCustomerResponseCode_name, int32(x))
}
func (RegisterCustomerResponse_RegisterCustomerResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17, 0}
}

type VerifySmsResponse_VerifyCustomerResponseCode int32

const (
	VerifySmsResponse_UNKNOWN        VerifySmsResponse_VerifyCustomerResponseCode = 0
	VerifySmsResponse_SUCCESS        VerifySmsResponse_VerifyCustomerResponseCode = 1
	VerifySmsResponse_WRONG_TOKEN    VerifySmsResponse_VerifyCustomerResponseCode = 2
	VerifySmsResponse_MOBILE_BLOCKED VerifySmsResponse_VerifyCustomerResponseCode = 3
	VerifySmsResponse_WRONG_CODE     VerifySmsResponse_VerifyCustomerResponseCode = 4
)

var VerifySmsResponse_VerifyCustomerResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "WRONG_TOKEN",
	3: "MOBILE_BLOCKED",
	4: "WRONG_CODE",
}
var VerifySmsResponse_VerifyCustomerResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"WRONG_TOKEN":    2,
	"MOBILE_BLOCKED": 3,
	"WRONG_CODE":     4,
}

func (x VerifySmsResponse_VerifyCustomerResponseCode) String() string {
	return proto.EnumName(VerifySmsResponse_VerifyCustomerResponseCode_name, int32(x))
}
func (VerifySmsResponse_VerifyCustomerResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19, 0}
}

type CheckLoginResponse_CheckLoginResponseCode int32

const (
	CheckLoginResponse_UNKNOWN             CheckLoginResponse_CheckLoginResponseCode = 0
	CheckLoginResponse_SUCCESS             CheckLoginResponse_CheckLoginResponseCode = 1
	CheckLoginResponse_MOBILE_BLOCKED      CheckLoginResponse_CheckLoginResponseCode = 2
	CheckLoginResponse_UNREGISTERED        CheckLoginResponse_CheckLoginResponseCode = 3
	CheckLoginResponse_DISABLED            CheckLoginResponse_CheckLoginResponseCode = 4
	CheckLoginResponse_WRONG_PASSWORD      CheckLoginResponse_CheckLoginResponseCode = 5
	CheckLoginResponse_FAILED              CheckLoginResponse_CheckLoginResponseCode = 6
	CheckLoginResponse_WRONG_MOBILE_NUMBER CheckLoginResponse_CheckLoginResponseCode = 7
)

var CheckLoginResponse_CheckLoginResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "UNREGISTERED",
	4: "DISABLED",
	5: "WRONG_PASSWORD",
	6: "FAILED",
	7: "WRONG_MOBILE_NUMBER",
}
var CheckLoginResponse_CheckLoginResponseCode_value = map[string]int32{
	"UNKNOWN":             0,
	"SUCCESS":             1,
	"MOBILE_BLOCKED":      2,
	"UNREGISTERED":        3,
	"DISABLED":            4,
	"WRONG_PASSWORD":      5,
	"FAILED":              6,
	"WRONG_MOBILE_NUMBER": 7,
}

func (x CheckLoginResponse_CheckLoginResponseCode) String() string {
	return proto.EnumName(CheckLoginResponse_CheckLoginResponseCode_name, int32(x))
}
func (CheckLoginResponse_CheckLoginResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{21, 0}
}

type CheckMobileResponse_CheckMobileResponseCode int32

const (
	CheckMobileResponse_UNKNOWN        CheckMobileResponse_CheckMobileResponseCode = 0
	CheckMobileResponse_SUCCESS        CheckMobileResponse_CheckMobileResponseCode = 1
	CheckMobileResponse_MOBILE_BLOCKED CheckMobileResponse_CheckMobileResponseCode = 2
	CheckMobileResponse_REGISTERED     CheckMobileResponse_CheckMobileResponseCode = 3
	CheckMobileResponse_UNREGISTERED   CheckMobileResponse_CheckMobileResponseCode = 4
	CheckMobileResponse_DISABLED       CheckMobileResponse_CheckMobileResponseCode = 5
)

var CheckMobileResponse_CheckMobileResponseCode_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "MOBILE_BLOCKED",
	3: "REGISTERED",
	4: "UNREGISTERED",
	5: "DISABLED",
}
var CheckMobileResponse_CheckMobileResponseCode_value = map[string]int32{
	"UNKNOWN":        0,
	"SUCCESS":        1,
	"MOBILE_BLOCKED": 2,
	"REGISTERED":     3,
	"UNREGISTERED":   4,
	"DISABLED":       5,
}

func (x CheckMobileResponse_CheckMobileResponseCode) String() string {
	return proto.EnumName(CheckMobileResponse_CheckMobileResponseCode_name, int32(x))
}
func (CheckMobileResponse_CheckMobileResponseCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23, 0}
}

type TransferMoneyResponse struct {
	ResponseCodes []TransferMoneyResponse_TransferMoneyResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.TransferMoneyResponse_TransferMoneyResponseCode" json:"responseCodes,omitempty"`
}

func (m *TransferMoneyResponse) Reset()                    { *m = TransferMoneyResponse{} }
func (m *TransferMoneyResponse) String() string            { return proto.CompactTextString(m) }
func (*TransferMoneyResponse) ProtoMessage()               {}
func (*TransferMoneyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TransferMoneyResponse) GetResponseCodes() []TransferMoneyResponse_TransferMoneyResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type TransferMoneyRequest struct {
	Token          string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	SrcCardNumber  string   `protobuf:"bytes,2,opt,name=srcCardNumber" json:"srcCardNumber,omitempty"`
	Password       string   `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	DstCardNumber  string   `protobuf:"bytes,4,opt,name=dstCardNumber" json:"dstCardNumber,omitempty"`
	TransferAmount int64    `protobuf:"varint,5,opt,name=transferAmount" json:"transferAmount,omitempty"`
	MobileNumber   string   `protobuf:"bytes,6,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	CardType       CardType `protobuf:"varint,7,opt,name=cardType,enum=protofiles.CardType" json:"cardType,omitempty"`
}

func (m *TransferMoneyRequest) Reset()                    { *m = TransferMoneyRequest{} }
func (m *TransferMoneyRequest) String() string            { return proto.CompactTextString(m) }
func (*TransferMoneyRequest) ProtoMessage()               {}
func (*TransferMoneyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TransferMoneyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TransferMoneyRequest) GetSrcCardNumber() string {
	if m != nil {
		return m.SrcCardNumber
	}
	return ""
}

func (m *TransferMoneyRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TransferMoneyRequest) GetDstCardNumber() string {
	if m != nil {
		return m.DstCardNumber
	}
	return ""
}

func (m *TransferMoneyRequest) GetTransferAmount() int64 {
	if m != nil {
		return m.TransferAmount
	}
	return 0
}

func (m *TransferMoneyRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *TransferMoneyRequest) GetCardType() CardType {
	if m != nil {
		return m.CardType
	}
	return CardType_PayCard
}

type CheckCardPasswordRequest struct {
	MobileNumber string   `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	CardNumber   string   `protobuf:"bytes,2,opt,name=cardNumber" json:"cardNumber,omitempty"`
	Token        string   `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	Password     string   `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Type         CardType `protobuf:"varint,5,opt,name=type,enum=protofiles.CardType" json:"type,omitempty"`
}

func (m *CheckCardPasswordRequest) Reset()                    { *m = CheckCardPasswordRequest{} }
func (m *CheckCardPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckCardPasswordRequest) ProtoMessage()               {}
func (*CheckCardPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CheckCardPasswordRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *CheckCardPasswordRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *CheckCardPasswordRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CheckCardPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CheckCardPasswordRequest) GetType() CardType {
	if m != nil {
		return m.Type
	}
	return CardType_PayCard
}

type CheckCardPasswordResponse struct {
	ResponseCodes []CheckCardPasswordResponse_CheckCardPasswordResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.CheckCardPasswordResponse_CheckCardPasswordResponseCode" json:"responseCodes,omitempty"`
}

func (m *CheckCardPasswordResponse) Reset()                    { *m = CheckCardPasswordResponse{} }
func (m *CheckCardPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckCardPasswordResponse) ProtoMessage()               {}
func (*CheckCardPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CheckCardPasswordResponse) GetResponseCodes() []CheckCardPasswordResponse_CheckCardPasswordResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type GetCardsRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	Token        string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *GetCardsRequest) Reset()                    { *m = GetCardsRequest{} }
func (m *GetCardsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCardsRequest) ProtoMessage()               {}
func (*GetCardsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetCardsRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *GetCardsRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetCardsResponse struct {
	ResponseCodes []GetCardsResponse_GetCardsResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.GetCardsResponse_GetCardsResponseCode" json:"responseCodes,omitempty"`
	Cards         []*Card                                 `protobuf:"bytes,2,rep,name=cards" json:"cards,omitempty"`
}

func (m *GetCardsResponse) Reset()                    { *m = GetCardsResponse{} }
func (m *GetCardsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCardsResponse) ProtoMessage()               {}
func (*GetCardsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetCardsResponse) GetResponseCodes() []GetCardsResponse_GetCardsResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

func (m *GetCardsResponse) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type GetCardRequest struct {
	MobileNumber string   `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	CardNumber   string   `protobuf:"bytes,2,opt,name=cardNumber" json:"cardNumber,omitempty"`
	Token        string   `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
	Passsowrd    string   `protobuf:"bytes,4,opt,name=passsowrd" json:"passsowrd,omitempty"`
	Type         CardType `protobuf:"varint,5,opt,name=type,enum=protofiles.CardType" json:"type,omitempty"`
}

func (m *GetCardRequest) Reset()                    { *m = GetCardRequest{} }
func (m *GetCardRequest) String() string            { return proto.CompactTextString(m) }
func (*GetCardRequest) ProtoMessage()               {}
func (*GetCardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetCardRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *GetCardRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *GetCardRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetCardRequest) GetPasssowrd() string {
	if m != nil {
		return m.Passsowrd
	}
	return ""
}

func (m *GetCardRequest) GetType() CardType {
	if m != nil {
		return m.Type
	}
	return CardType_PayCard
}

type GetCardResponse struct {
	ResponseCodes []GetCardResponse_GetCardResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.GetCardResponse_GetCardResponseCode" json:"responseCodes,omitempty"`
	Card          *Card                                 `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
}

func (m *GetCardResponse) Reset()                    { *m = GetCardResponse{} }
func (m *GetCardResponse) String() string            { return proto.CompactTextString(m) }
func (*GetCardResponse) ProtoMessage()               {}
func (*GetCardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetCardResponse) GetResponseCodes() []GetCardResponse_GetCardResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

func (m *GetCardResponse) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type Card struct {
	CardNumber string    `protobuf:"bytes,1,opt,name=cardNumber" json:"cardNumber,omitempty"`
	CardToken  string    `protobuf:"bytes,2,opt,name=cardToken" json:"cardToken,omitempty"`
	Cvv2       string    `protobuf:"bytes,3,opt,name=cvv2" json:"cvv2,omitempty"`
	Year       string    `protobuf:"bytes,4,opt,name=year" json:"year,omitempty"`
	Month      string    `protobuf:"bytes,5,opt,name=month" json:"month,omitempty"`
	Blocked    bool      `protobuf:"varint,6,opt,name=blocked" json:"blocked,omitempty"`
	Diabled    bool      `protobuf:"varint,7,opt,name=diabled" json:"diabled,omitempty"`
	CardName   string    `protobuf:"bytes,8,opt,name=cardName" json:"cardName,omitempty"`
	Type       CardType  `protobuf:"varint,9,opt,name=type,enum=protofiles.CardType" json:"type,omitempty"`
	Bank       *BankType `protobuf:"bytes,10,opt,name=bank" json:"bank,omitempty"`
	Balance    int64     `protobuf:"varint,11,opt,name=balance" json:"balance,omitempty"`
}

func (m *Card) Reset()                    { *m = Card{} }
func (m *Card) String() string            { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()               {}
func (*Card) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Card) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *Card) GetCardToken() string {
	if m != nil {
		return m.CardToken
	}
	return ""
}

func (m *Card) GetCvv2() string {
	if m != nil {
		return m.Cvv2
	}
	return ""
}

func (m *Card) GetYear() string {
	if m != nil {
		return m.Year
	}
	return ""
}

func (m *Card) GetMonth() string {
	if m != nil {
		return m.Month
	}
	return ""
}

func (m *Card) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

func (m *Card) GetDiabled() bool {
	if m != nil {
		return m.Diabled
	}
	return false
}

func (m *Card) GetCardName() string {
	if m != nil {
		return m.CardName
	}
	return ""
}

func (m *Card) GetType() CardType {
	if m != nil {
		return m.Type
	}
	return CardType_PayCard
}

func (m *Card) GetBank() *BankType {
	if m != nil {
		return m.Bank
	}
	return nil
}

func (m *Card) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type BankType struct {
	BankName string `protobuf:"bytes,1,opt,name=bankName" json:"bankName,omitempty"`
	BankID   int32  `protobuf:"varint,2,opt,name=bankID" json:"bankID,omitempty"`
}

func (m *BankType) Reset()                    { *m = BankType{} }
func (m *BankType) String() string            { return proto.CompactTextString(m) }
func (*BankType) ProtoMessage()               {}
func (*BankType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *BankType) GetBankName() string {
	if m != nil {
		return m.BankName
	}
	return ""
}

func (m *BankType) GetBankID() int32 {
	if m != nil {
		return m.BankID
	}
	return 0
}

type RemoveCardRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	CardNumber   string `protobuf:"bytes,2,opt,name=cardNumber" json:"cardNumber,omitempty"`
	Token        string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *RemoveCardRequest) Reset()                    { *m = RemoveCardRequest{} }
func (m *RemoveCardRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveCardRequest) ProtoMessage()               {}
func (*RemoveCardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RemoveCardRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *RemoveCardRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *RemoveCardRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RemoveCardResponse struct {
	ResponseCodes []RemoveCardResponse_RemoveCardResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.RemoveCardResponse_RemoveCardResponseCode" json:"responseCodes,omitempty"`
}

func (m *RemoveCardResponse) Reset()                    { *m = RemoveCardResponse{} }
func (m *RemoveCardResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveCardResponse) ProtoMessage()               {}
func (*RemoveCardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RemoveCardResponse) GetResponseCodes() []RemoveCardResponse_RemoveCardResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type AddCardRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	CardNumber   string `protobuf:"bytes,2,opt,name=cardNumber" json:"cardNumber,omitempty"`
	Token        string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *AddCardRequest) Reset()                    { *m = AddCardRequest{} }
func (m *AddCardRequest) String() string            { return proto.CompactTextString(m) }
func (*AddCardRequest) ProtoMessage()               {}
func (*AddCardRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AddCardRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *AddCardRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *AddCardRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type AddCardResponse struct {
	ResponseCodes []AddCardResponse_AddCardResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.AddCardResponse_AddCardResponseCode" json:"responseCodes,omitempty"`
}

func (m *AddCardResponse) Reset()                    { *m = AddCardResponse{} }
func (m *AddCardResponse) String() string            { return proto.CompactTextString(m) }
func (*AddCardResponse) ProtoMessage()               {}
func (*AddCardResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AddCardResponse) GetResponseCodes() []AddCardResponse_AddCardResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type TransactionRequest struct {
	//    string mobileNumber = 1;
	//    string password = 2;
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *TransactionRequest) Reset()                    { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string            { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()               {}
func (*TransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *TransactionRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type TransactionResponse struct {
	ResponseCodes []TransactionResponse_TransactionResponseCode `protobuf:"varint,1,rep,packed,name=responseCodes,enum=protofiles.TransactionResponse_TransactionResponseCode" json:"responseCodes,omitempty"`
}

func (m *TransactionResponse) Reset()                    { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string            { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()               {}
func (*TransactionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *TransactionResponse) GetResponseCodes() []TransactionResponse_TransactionResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type RegisterCustomerRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	Password     string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Token        string `protobuf:"bytes,3,opt,name=token" json:"token,omitempty"`
}

func (m *RegisterCustomerRequest) Reset()                    { *m = RegisterCustomerRequest{} }
func (m *RegisterCustomerRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterCustomerRequest) ProtoMessage()               {}
func (*RegisterCustomerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *RegisterCustomerRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *RegisterCustomerRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterCustomerRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type RegisterCustomerResponse struct {
	Message       string                                                  `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	ResponseCodes []RegisterCustomerResponse_RegisterCustomerResponseCode `protobuf:"varint,2,rep,packed,name=responseCodes,enum=protofiles.RegisterCustomerResponse_RegisterCustomerResponseCode" json:"responseCodes,omitempty"`
}

func (m *RegisterCustomerResponse) Reset()                    { *m = RegisterCustomerResponse{} }
func (m *RegisterCustomerResponse) String() string            { return proto.CompactTextString(m) }
func (*RegisterCustomerResponse) ProtoMessage()               {}
func (*RegisterCustomerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RegisterCustomerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RegisterCustomerResponse) GetResponseCodes() []RegisterCustomerResponse_RegisterCustomerResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type VerifySmsRequest struct {
	SmsCode string `protobuf:"bytes,1,opt,name=smsCode" json:"smsCode,omitempty"`
	Token   string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *VerifySmsRequest) Reset()                    { *m = VerifySmsRequest{} }
func (m *VerifySmsRequest) String() string            { return proto.CompactTextString(m) }
func (*VerifySmsRequest) ProtoMessage()               {}
func (*VerifySmsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *VerifySmsRequest) GetSmsCode() string {
	if m != nil {
		return m.SmsCode
	}
	return ""
}

func (m *VerifySmsRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type VerifySmsResponse struct {
	Message       string                                         `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Token         string                                         `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	ResponseCodes []VerifySmsResponse_VerifyCustomerResponseCode `protobuf:"varint,3,rep,packed,name=responseCodes,enum=protofiles.VerifySmsResponse_VerifyCustomerResponseCode" json:"responseCodes,omitempty"`
}

func (m *VerifySmsResponse) Reset()                    { *m = VerifySmsResponse{} }
func (m *VerifySmsResponse) String() string            { return proto.CompactTextString(m) }
func (*VerifySmsResponse) ProtoMessage()               {}
func (*VerifySmsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *VerifySmsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *VerifySmsResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerifySmsResponse) GetResponseCodes() []VerifySmsResponse_VerifyCustomerResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type CheckLoginRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
	Password     string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *CheckLoginRequest) Reset()                    { *m = CheckLoginRequest{} }
func (m *CheckLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckLoginRequest) ProtoMessage()               {}
func (*CheckLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CheckLoginRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

func (m *CheckLoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type CheckLoginResponse struct {
	Message       string                                      `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Token         string                                      `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	ResponseCodes []CheckLoginResponse_CheckLoginResponseCode `protobuf:"varint,3,rep,packed,name=responseCodes,enum=protofiles.CheckLoginResponse_CheckLoginResponseCode" json:"responseCodes,omitempty"`
}

func (m *CheckLoginResponse) Reset()                    { *m = CheckLoginResponse{} }
func (m *CheckLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckLoginResponse) ProtoMessage()               {}
func (*CheckLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CheckLoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CheckLoginResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CheckLoginResponse) GetResponseCodes() []CheckLoginResponse_CheckLoginResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

type CheckMobileRequest struct {
	MobileNumber string `protobuf:"bytes,1,opt,name=mobileNumber" json:"mobileNumber,omitempty"`
}

func (m *CheckMobileRequest) Reset()                    { *m = CheckMobileRequest{} }
func (m *CheckMobileRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckMobileRequest) ProtoMessage()               {}
func (*CheckMobileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CheckMobileRequest) GetMobileNumber() string {
	if m != nil {
		return m.MobileNumber
	}
	return ""
}

type CheckMobileResponse struct {
	Message       string                                        `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
	Token         string                                        `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	ResponseCodes []CheckMobileResponse_CheckMobileResponseCode `protobuf:"varint,3,rep,packed,name=responseCodes,enum=protofiles.CheckMobileResponse_CheckMobileResponseCode" json:"responseCodes,omitempty"`
}

func (m *CheckMobileResponse) Reset()                    { *m = CheckMobileResponse{} }
func (m *CheckMobileResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckMobileResponse) ProtoMessage()               {}
func (*CheckMobileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CheckMobileResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CheckMobileResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CheckMobileResponse) GetResponseCodes() []CheckMobileResponse_CheckMobileResponseCode {
	if m != nil {
		return m.ResponseCodes
	}
	return nil
}

func init() {
	proto.RegisterType((*TransferMoneyResponse)(nil), "protofiles.TransferMoneyResponse")
	proto.RegisterType((*TransferMoneyRequest)(nil), "protofiles.TransferMoneyRequest")
	proto.RegisterType((*CheckCardPasswordRequest)(nil), "protofiles.CheckCardPasswordRequest")
	proto.RegisterType((*CheckCardPasswordResponse)(nil), "protofiles.CheckCardPasswordResponse")
	proto.RegisterType((*GetCardsRequest)(nil), "protofiles.GetCardsRequest")
	proto.RegisterType((*GetCardsResponse)(nil), "protofiles.GetCardsResponse")
	proto.RegisterType((*GetCardRequest)(nil), "protofiles.GetCardRequest")
	proto.RegisterType((*GetCardResponse)(nil), "protofiles.GetCardResponse")
	proto.RegisterType((*Card)(nil), "protofiles.Card")
	proto.RegisterType((*BankType)(nil), "protofiles.BankType")
	proto.RegisterType((*RemoveCardRequest)(nil), "protofiles.RemoveCardRequest")
	proto.RegisterType((*RemoveCardResponse)(nil), "protofiles.RemoveCardResponse")
	proto.RegisterType((*AddCardRequest)(nil), "protofiles.AddCardRequest")
	proto.RegisterType((*AddCardResponse)(nil), "protofiles.AddCardResponse")
	proto.RegisterType((*TransactionRequest)(nil), "protofiles.TransactionRequest")
	proto.RegisterType((*TransactionResponse)(nil), "protofiles.TransactionResponse")
	proto.RegisterType((*RegisterCustomerRequest)(nil), "protofiles.RegisterCustomerRequest")
	proto.RegisterType((*RegisterCustomerResponse)(nil), "protofiles.RegisterCustomerResponse")
	proto.RegisterType((*VerifySmsRequest)(nil), "protofiles.VerifySmsRequest")
	proto.RegisterType((*VerifySmsResponse)(nil), "protofiles.VerifySmsResponse")
	proto.RegisterType((*CheckLoginRequest)(nil), "protofiles.CheckLoginRequest")
	proto.RegisterType((*CheckLoginResponse)(nil), "protofiles.CheckLoginResponse")
	proto.RegisterType((*CheckMobileRequest)(nil), "protofiles.CheckMobileRequest")
	proto.RegisterType((*CheckMobileResponse)(nil), "protofiles.CheckMobileResponse")
	proto.RegisterEnum("protofiles.CardType", CardType_name, CardType_value)
	proto.RegisterEnum("protofiles.TransferMoneyResponse_TransferMoneyResponseCode", TransferMoneyResponse_TransferMoneyResponseCode_name, TransferMoneyResponse_TransferMoneyResponseCode_value)
	proto.RegisterEnum("protofiles.CheckCardPasswordResponse_CheckCardPasswordResponseCode", CheckCardPasswordResponse_CheckCardPasswordResponseCode_name, CheckCardPasswordResponse_CheckCardPasswordResponseCode_value)
	proto.RegisterEnum("protofiles.GetCardsResponse_GetCardsResponseCode", GetCardsResponse_GetCardsResponseCode_name, GetCardsResponse_GetCardsResponseCode_value)
	proto.RegisterEnum("protofiles.GetCardResponse_GetCardResponseCode", GetCardResponse_GetCardResponseCode_name, GetCardResponse_GetCardResponseCode_value)
	proto.RegisterEnum("protofiles.RemoveCardResponse_RemoveCardResponseCode", RemoveCardResponse_RemoveCardResponseCode_name, RemoveCardResponse_RemoveCardResponseCode_value)
	proto.RegisterEnum("protofiles.AddCardResponse_AddCardResponseCode", AddCardResponse_AddCardResponseCode_name, AddCardResponse_AddCardResponseCode_value)
	proto.RegisterEnum("protofiles.TransactionResponse_TransactionResponseCode", TransactionResponse_TransactionResponseCode_name, TransactionResponse_TransactionResponseCode_value)
	proto.RegisterEnum("protofiles.RegisterCustomerResponse_RegisterCustomerResponseCode", RegisterCustomerResponse_RegisterCustomerResponseCode_name, RegisterCustomerResponse_RegisterCustomerResponseCode_value)
	proto.RegisterEnum("protofiles.VerifySmsResponse_VerifyCustomerResponseCode", VerifySmsResponse_VerifyCustomerResponseCode_name, VerifySmsResponse_VerifyCustomerResponseCode_value)
	proto.RegisterEnum("protofiles.CheckLoginResponse_CheckLoginResponseCode", CheckLoginResponse_CheckLoginResponseCode_name, CheckLoginResponse_CheckLoginResponseCode_value)
	proto.RegisterEnum("protofiles.CheckMobileResponse_CheckMobileResponseCode", CheckMobileResponse_CheckMobileResponseCode_name, CheckMobileResponse_CheckMobileResponseCode_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Customer service

type CustomerClient interface {
	CheckMobile(ctx context.Context, in *CheckMobileRequest, opts ...grpc.CallOption) (*CheckMobileResponse, error)
	CheckLogin(ctx context.Context, in *CheckLoginRequest, opts ...grpc.CallOption) (*CheckLoginResponse, error)
	VerifySMS(ctx context.Context, in *VerifySmsRequest, opts ...grpc.CallOption) (*VerifySmsResponse, error)
	Register(ctx context.Context, in *RegisterCustomerRequest, opts ...grpc.CallOption) (*RegisterCustomerResponse, error)
	AddCard(ctx context.Context, in *AddCardRequest, opts ...grpc.CallOption) (*AddCardResponse, error)
	RemoveCard(ctx context.Context, in *RemoveCardRequest, opts ...grpc.CallOption) (*RemoveCardResponse, error)
	GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error)
	CheckCardPassword(ctx context.Context, in *CheckCardPasswordRequest, opts ...grpc.CallOption) (*CheckCardPasswordResponse, error)
	GetCards(ctx context.Context, in *GetCardsRequest, opts ...grpc.CallOption) (*GetCardsResponse, error)
	Transaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	TransferMoney(ctx context.Context, in *TransferMoneyRequest, opts ...grpc.CallOption) (*TransferMoneyResponse, error)
}

type customerClient struct {
	cc *grpc.ClientConn
}

func NewCustomerClient(cc *grpc.ClientConn) CustomerClient {
	return &customerClient{cc}
}

func (c *customerClient) CheckMobile(ctx context.Context, in *CheckMobileRequest, opts ...grpc.CallOption) (*CheckMobileResponse, error) {
	out := new(CheckMobileResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/checkMobile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) CheckLogin(ctx context.Context, in *CheckLoginRequest, opts ...grpc.CallOption) (*CheckLoginResponse, error) {
	out := new(CheckLoginResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/checkLogin", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) VerifySMS(ctx context.Context, in *VerifySmsRequest, opts ...grpc.CallOption) (*VerifySmsResponse, error) {
	out := new(VerifySmsResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/verifySMS", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) Register(ctx context.Context, in *RegisterCustomerRequest, opts ...grpc.CallOption) (*RegisterCustomerResponse, error) {
	out := new(RegisterCustomerResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) AddCard(ctx context.Context, in *AddCardRequest, opts ...grpc.CallOption) (*AddCardResponse, error) {
	out := new(AddCardResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/addCard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) RemoveCard(ctx context.Context, in *RemoveCardRequest, opts ...grpc.CallOption) (*RemoveCardResponse, error) {
	out := new(RemoveCardResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/removeCard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) GetCard(ctx context.Context, in *GetCardRequest, opts ...grpc.CallOption) (*GetCardResponse, error) {
	out := new(GetCardResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/getCard", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) CheckCardPassword(ctx context.Context, in *CheckCardPasswordRequest, opts ...grpc.CallOption) (*CheckCardPasswordResponse, error) {
	out := new(CheckCardPasswordResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/checkCardPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) GetCards(ctx context.Context, in *GetCardsRequest, opts ...grpc.CallOption) (*GetCardsResponse, error) {
	out := new(GetCardsResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/getCards", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) Transaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/transaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerClient) TransferMoney(ctx context.Context, in *TransferMoneyRequest, opts ...grpc.CallOption) (*TransferMoneyResponse, error) {
	out := new(TransferMoneyResponse)
	err := grpc.Invoke(ctx, "/protofiles.Customer/transferMoney", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Customer service

type CustomerServer interface {
	CheckMobile(context.Context, *CheckMobileRequest) (*CheckMobileResponse, error)
	CheckLogin(context.Context, *CheckLoginRequest) (*CheckLoginResponse, error)
	VerifySMS(context.Context, *VerifySmsRequest) (*VerifySmsResponse, error)
	Register(context.Context, *RegisterCustomerRequest) (*RegisterCustomerResponse, error)
	AddCard(context.Context, *AddCardRequest) (*AddCardResponse, error)
	RemoveCard(context.Context, *RemoveCardRequest) (*RemoveCardResponse, error)
	GetCard(context.Context, *GetCardRequest) (*GetCardResponse, error)
	CheckCardPassword(context.Context, *CheckCardPasswordRequest) (*CheckCardPasswordResponse, error)
	GetCards(context.Context, *GetCardsRequest) (*GetCardsResponse, error)
	Transaction(context.Context, *TransactionRequest) (*TransactionResponse, error)
	TransferMoney(context.Context, *TransferMoneyRequest) (*TransferMoneyResponse, error)
}

func RegisterCustomerServer(s *grpc.Server, srv CustomerServer) {
	s.RegisterService(&_Customer_serviceDesc, srv)
}

func _Customer_CheckMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckMobileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CheckMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/CheckMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CheckMobile(ctx, req.(*CheckMobileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_CheckLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CheckLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/CheckLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CheckLogin(ctx, req.(*CheckLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_VerifySMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifySmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).VerifySMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/VerifySMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).VerifySMS(ctx, req.(*VerifySmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).Register(ctx, req.(*RegisterCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_AddCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).AddCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/AddCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).AddCard(ctx, req.(*AddCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_RemoveCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).RemoveCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/RemoveCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).RemoveCard(ctx, req.(*RemoveCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_GetCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).GetCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/GetCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).GetCard(ctx, req.(*GetCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_CheckCardPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckCardPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).CheckCardPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/CheckCardPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).CheckCardPassword(ctx, req.(*CheckCardPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_GetCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).GetCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/GetCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).GetCards(ctx, req.(*GetCardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_Transaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).Transaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/Transaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).Transaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Customer_TransferMoney_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferMoneyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServer).TransferMoney(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protofiles.Customer/TransferMoney",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServer).TransferMoney(ctx, req.(*TransferMoneyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Customer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protofiles.Customer",
	HandlerType: (*CustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "checkMobile",
			Handler:    _Customer_CheckMobile_Handler,
		},
		{
			MethodName: "checkLogin",
			Handler:    _Customer_CheckLogin_Handler,
		},
		{
			MethodName: "verifySMS",
			Handler:    _Customer_VerifySMS_Handler,
		},
		{
			MethodName: "register",
			Handler:    _Customer_Register_Handler,
		},
		{
			MethodName: "addCard",
			Handler:    _Customer_AddCard_Handler,
		},
		{
			MethodName: "removeCard",
			Handler:    _Customer_RemoveCard_Handler,
		},
		{
			MethodName: "getCard",
			Handler:    _Customer_GetCard_Handler,
		},
		{
			MethodName: "checkCardPassword",
			Handler:    _Customer_CheckCardPassword_Handler,
		},
		{
			MethodName: "getCards",
			Handler:    _Customer_GetCards_Handler,
		},
		{
			MethodName: "transaction",
			Handler:    _Customer_Transaction_Handler,
		},
		{
			MethodName: "transferMoney",
			Handler:    _Customer_TransferMoney_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "payDemo.proto",
}

func init() { proto.RegisterFile("payDemo.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1541 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4f, 0x6f, 0x1b, 0x45,
	0x14, 0xf7, 0xae, 0xff, 0x3f, 0x27, 0xee, 0x66, 0x12, 0x92, 0x6d, 0x9a, 0x96, 0x30, 0xa4, 0x55,
	0xd4, 0x43, 0x80, 0xa0, 0xaa, 0x95, 0x90, 0x90, 0xec, 0xb5, 0x1b, 0x4c, 0xfc, 0x27, 0xda, 0xb5,
	0x1b, 0xa0, 0x2a, 0xd6, 0xda, 0x9e, 0xa6, 0x26, 0xb1, 0xd7, 0xec, 0x3a, 0xa9, 0x7c, 0x42, 0xe2,
	0xc2, 0x85, 0x03, 0x02, 0xae, 0x08, 0x21, 0x38, 0x73, 0x40, 0x42, 0x48, 0x9c, 0x90, 0xf8, 0x06,
	0x5c, 0xf9, 0x0c, 0x48, 0x7c, 0x04, 0x34, 0xb3, 0xeb, 0xf5, 0xfe, 0x19, 0x3b, 0x71, 0x53, 0x0a,
	0x27, 0x7b, 0xde, 0xbc, 0x79, 0xf3, 0xf6, 0xf7, 0x7b, 0xef, 0xcd, 0x9b, 0x81, 0xc5, 0x81, 0x3e,
	0x2a, 0x90, 0x9e, 0xb1, 0x33, 0x30, 0x8d, 0xa1, 0x81, 0x80, 0xfd, 0x3c, 0xee, 0x9e, 0x10, 0x0b,
	0xff, 0x25, 0xc2, 0x4b, 0x75, 0x53, 0xef, 0x5b, 0x8f, 0x89, 0x59, 0x31, 0xfa, 0x64, 0xa4, 0x12,
	0x6b, 0x60, 0xf4, 0x2d, 0x82, 0x74, 0x58, 0x34, 0x9d, 0xff, 0x8a, 0xd1, 0x21, 0x96, 0x2c, 0x6c,
	0x46, 0xb7, 0xb3, 0xbb, 0x6f, 0xed, 0x4c, 0x56, 0xef, 0x70, 0x57, 0xf2, 0xa5, 0xd4, 0x86, 0xea,
	0xb7, 0x88, 0xff, 0x16, 0xe0, 0xea, 0x54, 0x65, 0x94, 0x81, 0x64, 0xa3, 0xba, 0x5f, 0xad, 0x1d,
	0x56, 0xa5, 0x08, 0x1d, 0x68, 0x0d, 0x45, 0x29, 0x6a, 0x9a, 0x24, 0x20, 0x04, 0xd9, 0x4a, 0x2d,
	0x5f, 0x2a, 0x17, 0x9b, 0xf9, 0x72, 0x4d, 0xd9, 0x2f, 0x16, 0x24, 0x11, 0x2d, 0x40, 0xaa, 0x50,
	0xd2, 0x72, 0xf9, 0x72, 0xb1, 0x20, 0x45, 0xd1, 0x0a, 0x48, 0xa5, 0xea, 0x83, 0x5c, 0xb9, 0x54,
	0x68, 0x6a, 0xaa, 0xd2, 0x54, 0x72, 0x6a, 0x41, 0x8a, 0x79, 0xa5, 0x05, 0xad, 0x6e, 0x4b, 0xe3,
	0xe8, 0x0a, 0x64, 0x0e, 0xd5, 0x5a, 0x75, 0xaf, 0x59, 0xaf, 0xed, 0x17, 0xab, 0x52, 0x02, 0x65,
	0x01, 0x6c, 0x41, 0x43, 0x2b, 0xaa, 0x52, 0x12, 0x01, 0x24, 0xee, 0xe7, 0x4a, 0xd4, 0x70, 0x8a,
	0x6e, 0x6d, 0xcf, 0x1d, 0xe4, 0x34, 0xed, 0xb0, 0xa6, 0x16, 0xa4, 0x34, 0x92, 0x61, 0xa5, 0x54,
	0xd5, 0x1a, 0xf7, 0xef, 0x97, 0x94, 0x52, 0xb1, 0x5a, 0x6f, 0xe6, 0x73, 0xe5, 0x5c, 0x55, 0x29,
	0x4a, 0x80, 0x24, 0x58, 0xb0, 0xb5, 0x73, 0x95, 0x5a, 0xa3, 0x5a, 0x97, 0x32, 0xf8, 0x4b, 0x11,
	0x56, 0x02, 0x9f, 0xfc, 0xf1, 0x29, 0xb1, 0x86, 0x68, 0x05, 0xe2, 0x43, 0xe3, 0x98, 0xf4, 0x65,
	0x61, 0x53, 0xd8, 0x4e, 0xab, 0xf6, 0x00, 0x6d, 0xc1, 0xa2, 0x65, 0xb6, 0x15, 0xdd, 0xec, 0x54,
	0x4f, 0x7b, 0x2d, 0x62, 0xca, 0x22, 0x9b, 0xf5, 0x0b, 0xd1, 0x3a, 0xa4, 0x06, 0xba, 0x65, 0x3d,
	0x35, 0xcc, 0x8e, 0x1c, 0x65, 0x0a, 0xee, 0x98, 0x5a, 0xe8, 0x58, 0x43, 0x8f, 0x85, 0x98, 0x6d,
	0xc1, 0x27, 0x44, 0xb7, 0x20, 0x3b, 0x74, 0xbc, 0xca, 0xf5, 0x8c, 0xd3, 0xfe, 0x50, 0x8e, 0x6f,
	0x0a, 0xdb, 0x51, 0x35, 0x20, 0x45, 0x18, 0x16, 0x7a, 0x46, 0xab, 0x7b, 0x42, 0x1c, 0x63, 0x09,
	0x66, 0xcc, 0x27, 0x43, 0xaf, 0x43, 0xaa, 0xad, 0x9b, 0x9d, 0xfa, 0x68, 0x40, 0xe4, 0xe4, 0xa6,
	0xb0, 0x9d, 0xdd, 0x5d, 0xf1, 0xc6, 0x8c, 0xe2, 0xcc, 0xa9, 0xae, 0x16, 0xfe, 0x55, 0x00, 0x59,
	0x79, 0x42, 0xda, 0xc7, 0x74, 0xee, 0xc0, 0xf1, 0x7c, 0x0c, 0x4c, 0x70, 0x4b, 0x81, 0xb3, 0xe5,
	0x0d, 0x80, 0x76, 0x10, 0x23, 0x8f, 0x64, 0x02, 0x6e, 0xd4, 0x0b, 0xae, 0x17, 0xb6, 0x58, 0x00,
	0xb6, 0x6d, 0x88, 0x0d, 0xe9, 0x07, 0xc4, 0x67, 0x7c, 0x00, 0xd3, 0xc0, 0xbf, 0x88, 0x70, 0x95,
	0xe3, 0xbc, 0x93, 0x45, 0x5d, 0x7e, 0x16, 0x29, 0x3e, 0x83, 0xd3, 0x56, 0x4f, 0x9f, 0xe1, 0x65,
	0xd3, 0x8f, 0x02, 0x5c, 0x9f, 0xb9, 0xe0, 0x52, 0x19, 0x25, 0xc1, 0xc2, 0x38, 0x77, 0x9c, 0x6c,
	0x0a, 0xe4, 0x4d, 0x3c, 0x90, 0x37, 0x09, 0x4f, 0xde, 0x24, 0x39, 0x79, 0x93, 0xc2, 0xfb, 0x70,
	0x65, 0x8f, 0xb0, 0x28, 0xb4, 0xe6, 0x21, 0x9b, 0x4b, 0x26, 0xfe, 0x5a, 0x04, 0x69, 0x62, 0xcd,
	0x41, 0xff, 0x90, 0x8f, 0xfe, 0x1b, 0x5e, 0xf4, 0x83, 0x8b, 0x42, 0x02, 0x0e, 0xd6, 0xe8, 0x16,
	0xc4, 0x69, 0x78, 0x59, 0xb2, 0xb8, 0x19, 0xdd, 0xce, 0xec, 0x4a, 0xc1, 0xf8, 0x50, 0xed, 0x69,
	0xfc, 0x09, 0xac, 0xf0, 0xcc, 0x5d, 0x8a, 0x89, 0x00, 0xee, 0xb1, 0x00, 0xee, 0x71, 0x0f, 0xee,
	0x09, 0xfc, 0x93, 0x00, 0x59, 0xc7, 0x83, 0x7f, 0x3f, 0xa1, 0x36, 0x20, 0x4d, 0x13, 0xc8, 0x32,
	0x9e, 0xba, 0x19, 0x35, 0x11, 0xcc, 0x91, 0x52, 0x3f, 0x8b, 0x6e, 0x64, 0xb8, 0x54, 0x36, 0xf8,
	0x54, 0xbe, 0xc6, 0xa1, 0x32, 0xc8, 0xe4, 0x2c, 0x22, 0xb7, 0x20, 0x46, 0x3f, 0x8b, 0x7d, 0x22,
	0x8f, 0x47, 0x36, 0x8b, 0x7f, 0x10, 0x60, 0x99, 0x63, 0xec, 0xff, 0x96, 0x50, 0xbf, 0x89, 0x10,
	0xa3, 0x3e, 0x06, 0xe8, 0x13, 0x42, 0xf4, 0x6d, 0x40, 0x9a, 0x15, 0x5f, 0x46, 0xa1, 0xcd, 0xee,
	0x44, 0x80, 0x10, 0xc4, 0xda, 0x67, 0x67, 0xbb, 0x0e, 0xb7, 0xec, 0x3f, 0x95, 0x8d, 0x88, 0x3e,
	0x3e, 0x3d, 0xd8, 0x7f, 0x1a, 0x04, 0x3d, 0xa3, 0x3f, 0x7c, 0xc2, 0x18, 0x4d, 0xab, 0xf6, 0x00,
	0xc9, 0x90, 0x6c, 0x9d, 0x18, 0xed, 0x63, 0xd2, 0x61, 0xa7, 0x43, 0x4a, 0x1d, 0x0f, 0xe9, 0x4c,
	0xa7, 0xab, 0xb7, 0x4e, 0x48, 0x87, 0x9d, 0x0b, 0x29, 0x75, 0x3c, 0xa4, 0x95, 0x98, 0x79, 0xa7,
	0xf7, 0x88, 0x9c, 0xb2, 0x2b, 0xf1, 0x78, 0xec, 0x86, 0x4d, 0xfa, 0xbc, 0xb0, 0xa1, 0x9a, 0x2d,
	0xbd, 0x7f, 0x2c, 0x03, 0xe3, 0xd2, 0xa7, 0x99, 0xd7, 0xfb, 0xc7, 0xb6, 0x26, 0xd5, 0x60, 0x3e,
	0xea, 0x27, 0x7a, 0xbf, 0x4d, 0xe4, 0x0c, 0x3b, 0xe7, 0xc6, 0x43, 0xfc, 0x36, 0xa4, 0xc6, 0xba,
	0xd4, 0x2b, 0xaa, 0xcd, 0xbc, 0xb2, 0x31, 0x74, 0xc7, 0x68, 0x15, 0x12, 0xf4, 0x7f, 0xa9, 0xc0,
	0xe0, 0x8b, 0xab, 0xce, 0x08, 0xf7, 0x60, 0x49, 0x25, 0x3d, 0xe3, 0x8c, 0xbc, 0x90, 0x8c, 0xc3,
	0x9f, 0x89, 0x80, 0xbc, 0xfb, 0x39, 0xc9, 0xf2, 0x90, 0x9f, 0x2c, 0x77, 0xbc, 0x90, 0x84, 0x97,
	0x71, 0x44, 0xbc, 0x73, 0xe6, 0x2b, 0x01, 0x56, 0xf9, 0x9a, 0xff, 0x61, 0x3e, 0xe0, 0x8f, 0x20,
	0x9b, 0xeb, 0x74, 0x5e, 0x0c, 0xea, 0x9f, 0x8b, 0x70, 0xc5, 0xdd, 0x6c, 0x8e, 0xfa, 0x14, 0x58,
	0x13, 0x1c, 0xf3, 0xc0, 0xfe, 0x4e, 0x80, 0x65, 0x8e, 0xda, 0xf3, 0x47, 0x9a, 0xfe, 0x6b, 0x16,
	0xdf, 0x2b, 0x69, 0x75, 0x6d, 0xce, 0x9e, 0x18, 0xdf, 0x06, 0xc4, 0x5a, 0x5a, 0xbd, 0x3d, 0xec,
	0x1a, 0xfd, 0x99, 0x0d, 0x2d, 0xfe, 0x43, 0x84, 0x65, 0x9f, 0xb2, 0x03, 0xdf, 0x23, 0x3e, 0x7c,
	0x77, 0x43, 0xb7, 0x0d, 0xff, 0x3a, 0x9e, 0x8c, 0x07, 0xe3, 0x9f, 0x02, 0xac, 0x4d, 0x51, 0xbd,
	0x04, 0x94, 0x31, 0xb4, 0x06, 0xcb, 0x36, 0x2c, 0x0c, 0x3e, 0xb7, 0x14, 0xc7, 0xa7, 0xde, 0x09,
	0x12, 0x21, 0xf4, 0xb9, 0xa5, 0x3c, 0x48, 0x40, 0x3a, 0x40, 0x00, 0x78, 0x08, 0xc8, 0x60, 0x03,
	0xd6, 0x54, 0x72, 0xd4, 0xb5, 0x86, 0xc4, 0x54, 0x4e, 0xad, 0xa1, 0xd1, 0x23, 0xe6, 0x3c, 0x49,
	0xe0, 0xed, 0x83, 0xc5, 0x40, 0x1f, 0xcc, 0x4f, 0x80, 0xdf, 0x45, 0x90, 0xc3, 0x3b, 0x3a, 0x54,
	0xca, 0x90, 0xec, 0x11, 0xcb, 0xd2, 0x8f, 0xc6, 0x55, 0x73, 0x3c, 0x44, 0x47, 0x41, 0x92, 0x45,
	0x46, 0x72, 0xce, 0x5f, 0x96, 0xf8, 0x66, 0xa7, 0x4e, 0xf0, 0xe8, 0xfe, 0x5e, 0x80, 0x8d, 0x59,
	0xfa, 0x33, 0x38, 0x0f, 0x00, 0x2f, 0x72, 0x82, 0x20, 0x4a, 0x65, 0xda, 0x3b, 0x35, 0xb5, 0x3e,
	0x61, 0x2c, 0xe6, 0x0b, 0x8c, 0x24, 0x5a, 0x05, 0x94, 0x2b, 0xab, 0xc5, 0x5c, 0xe1, 0xfd, 0xa6,
	0x5a, 0xdc, 0x2b, 0x69, 0xf5, 0xa2, 0xca, 0xee, 0x8f, 0x13, 0xda, 0xd2, 0x38, 0x0f, 0xd2, 0x03,
	0x62, 0x76, 0x1f, 0x8f, 0xb4, 0x9e, 0xdb, 0x00, 0xcb, 0x90, 0xb4, 0x7a, 0x16, 0xf5, 0x71, 0x0c,
	0x9e, 0x33, 0x9c, 0x30, 0x21, 0x7a, 0x99, 0xf8, 0x42, 0x84, 0x25, 0x8f, 0x91, 0x73, 0x29, 0xe0,
	0x5a, 0x41, 0x1f, 0x06, 0x89, 0x89, 0x32, 0x62, 0xee, 0x79, 0x89, 0x09, 0xed, 0xe2, 0x48, 0x2e,
	0xc2, 0xc7, 0x31, 0xac, 0x4f, 0x57, 0xbe, 0x2c, 0x19, 0x6e, 0x66, 0x28, 0xb5, 0x42, 0x51, 0x8a,
	0x61, 0x0d, 0x96, 0xd8, 0x35, 0xa8, 0x6c, 0x1c, 0x75, 0xfb, 0xcf, 0x29, 0x0f, 0x68, 0xc4, 0x23,
	0xaf, 0xd5, 0x67, 0x04, 0xfa, 0x21, 0x1f, 0xe8, 0x3b, 0xa1, 0xeb, 0xa0, 0x6f, 0x1b, 0x8e, 0x88,
	0x87, 0xf2, 0xb7, 0x02, 0xac, 0xf2, 0x35, 0xe7, 0xac, 0x71, 0x12, 0x2c, 0x34, 0xaa, 0x9e, 0xb0,
	0x8d, 0x06, 0xaa, 0x5e, 0xb8, 0x60, 0xf9, 0x2e, 0x1d, 0x93, 0xaa, 0xe8, 0x58, 0xae, 0x36, 0x2a,
	0x79, 0x7a, 0x6a, 0xe0, 0x7b, 0x0e, 0x88, 0x15, 0x06, 0xfb, 0x1c, 0xdc, 0xe0, 0x6f, 0x44, 0x58,
	0xf6, 0x2d, 0x7d, 0x46, 0x02, 0x1e, 0xf1, 0x09, 0xb8, 0x1b, 0x22, 0xc0, 0xbf, 0x0f, 0x4f, 0xc6,
	0xa3, 0xe0, 0x29, 0xac, 0x4d, 0xd1, 0x9c, 0x93, 0x82, 0x2c, 0x80, 0x8f, 0x80, 0x20, 0x25, 0xfe,
	0x7a, 0x13, 0xbf, 0x7d, 0x13, 0x52, 0xe3, 0x6e, 0x98, 0x1a, 0x3f, 0xd0, 0x47, 0x74, 0x28, 0x45,
	0xa8, 0x1a, 0x6d, 0x68, 0xd9, 0x48, 0xd8, 0xfd, 0x34, 0x09, 0xa9, 0x71, 0x0e, 0xa2, 0x03, 0xc8,
	0xb4, 0x27, 0xce, 0xa2, 0x1b, 0x53, 0x31, 0x60, 0x34, 0xad, 0xbf, 0x7c, 0x0e, 0x46, 0x38, 0x82,
	0x2a, 0x00, 0x6d, 0x37, 0x00, 0xd1, 0xf5, 0x69, 0x51, 0x6d, 0xdb, 0xbb, 0x31, 0x3b, 0xe8, 0x71,
	0x04, 0xbd, 0x0b, 0xe9, 0x33, 0xbb, 0xea, 0x54, 0x34, 0xb4, 0x31, 0xa5, 0x18, 0xd9, 0xc6, 0xae,
	0xcf, 0x2c, 0x55, 0x38, 0x82, 0x0e, 0x21, 0x65, 0x3a, 0x27, 0x02, 0x7a, 0x75, 0xf6, 0x81, 0x63,
	0x5b, 0xdc, 0xba, 0xc8, 0xa9, 0x84, 0x23, 0xa8, 0x00, 0x49, 0xdd, 0x6e, 0xd0, 0xd0, 0x3a, 0xb7,
	0xd9, 0xb3, 0xcd, 0x5d, 0x9b, 0xd1, 0x08, 0xda, 0xc8, 0x99, 0x6e, 0x4f, 0xed, 0x47, 0x2e, 0x74,
	0x9f, 0xf0, 0x23, 0x17, 0x6e, 0xc5, 0x6d, 0xa7, 0x8e, 0xec, 0xfb, 0xaa, 0xdf, 0x29, 0xff, 0x53,
	0x80, 0xdf, 0xa9, 0xc0, 0x05, 0x17, 0x47, 0x50, 0x0b, 0x96, 0xda, 0xc1, 0x07, 0x25, 0xb4, 0x75,
	0xce, 0xd3, 0x95, 0x6d, 0xf9, 0xe6, 0x85, 0x1e, 0xb8, 0x70, 0x04, 0xed, 0x41, 0xca, 0xf1, 0xd4,
	0x42, 0xd7, 0xf8, 0xef, 0x32, 0xb6, 0xc5, 0x8d, 0x59, 0x8f, 0x36, 0x38, 0x42, 0xa3, 0x79, 0x38,
	0xe9, 0xf0, 0xfc, 0xd1, 0x1c, 0x6e, 0x4f, 0xfd, 0xd1, 0xcc, 0x69, 0x0d, 0x71, 0x04, 0x3d, 0x80,
	0xc5, 0xa1, 0xf7, 0xa9, 0x16, 0x6d, 0xce, 0x78, 0xfb, 0xb6, 0xad, 0xbe, 0x72, 0xee, 0xeb, 0x38,
	0x8e, 0xe4, 0x11, 0x64, 0xba, 0xc6, 0xce, 0x91, 0x39, 0x68, 0xef, 0x0c, 0xf4, 0xd1, 0x07, 0xd1,
	0x81, 0x3e, 0x6a, 0x25, 0xd8, 0xba, 0x37, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x81, 0x63,
	0x25, 0xab, 0x17, 0x00, 0x00,
}
